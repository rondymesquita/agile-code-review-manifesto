"use strict";(self.webpackChunkthe_agile_code_review_manifesto=self.webpackChunkthe_agile_code_review_manifesto||[]).push([[720],{748:(e,o,a)=>{a.r(o),a.d(o,{data:()=>i});const i={key:"v-2132ee27",path:"/README.pt-BR.html",title:"O Manifesto da Revisão de Código Ágil",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Introdução",slug:"introducao",children:[]},{level:2,title:"As Dez Práticas",slug:"as-dez-praticas",children:[]}],filePathRelative:"README.pt-BR.md",git:{updatedTime:1632002039e3,contributors:[{name:"Rondinelli Mesquita",email:"rondinellimesquitas@gmail.com",commits:1}]}}},296:(e,o,a)=>{a.r(o),a.d(o,{default:()=>s});const i=(0,a(252).uE)('<h1 id="o-manifesto-da-revisao-de-codigo-agil" tabindex="-1"><a class="header-anchor" href="#o-manifesto-da-revisao-de-codigo-agil" aria-hidden="true">#</a> O Manifesto da Revisão de Código Ágil</h1><h2 id="introducao" tabindex="-1"><a class="header-anchor" href="#introducao" aria-hidden="true">#</a> Introdução</h2><p>Esse manifesto coleta 10 práticas de como conduzir a revisão de código usando uma abordagem ágil. Ele procura focar em melhor análisar aquilo que foi desenvolvido, compartilhar o entendimento sobre os requisitos e manter as pessoas próximas e trabalhando juntas como um time.</p><p>Esse manifesto é baseado no Manifesto Ágil junto com minha experiencia como desenvolvedor de software em times ágeis.</p><p>As práticas descritas aqui não são regras e representam um ponto de vista particular, como uma opinião de como aplicar a atividade de revisão de código. Algumas práticas aqui podem ou não funcionar para a sua situação. Considere adaptar de acordo com suas necessidades.</p><h2 id="as-dez-praticas" tabindex="-1"><a class="header-anchor" href="#as-dez-praticas" aria-hidden="true">#</a> As Dez Práticas</h2><ol><li>Manter código funcionando é mais importante do que revisar código que não funciona.</li><li>Use ferramentas para analisar o código para você. Isso vai te economizar muito tempo (e do seu time também).</li><li>Defina um padronização (ou use alguma existente). O time deve desenvolver o código seguindo um padrão.</li><li>Não esqueça, o codigo foi escrito por pessoas, não por máquinas.</li><li>Dar uma sugestão de melhoria vale mais do que apenas apontar erros.</li><li>Seja dono do código que você está revisando. Você também é dono, não apenas quem o desenvolveu.</li><li>Encare a revisão de código como um momento de aprender. Seja o código desenvolvido por você ou não.</li><li>Embase suas afirmações em boas práticas da linguagem e/ou da comunidade.</li><li>Comunique-se com seu time. Entender o código em conjunto com seu time é mais importante do que suposições.</li><li>Desapegue-se do código desenvolvido por você. O código está em constante evolução. E você também deve estar.</li></ol>',7),s={render:function(e,o){return i}}}}]);